{"version":3,"sources":["hooks/useWindowSize.js","Header.js","hooks/useAxiosFetch.js","context/DataContext.js","Nav.js","Footer.js","Layout.js","Post.js","Feed.js","Home.js","About.js","api/posts.js","PostPage.js","NewPost.js","EditPost.js","Missing.js","App.js","index.js"],"names":["useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Header","title","className","useAxiosFetch","dataUrl","data","setData","fetchError","setFetchError","isLoading","setIsLoading","isMounted","source","axios","CancelToken","fetchData","url","a","get","cancelToken","token","response","message","setTimeout","cancel","DataContext","createContext","DataProvider","children","posts","setPosts","search","setSearch","searchResults","setSearchResults","filterResults","filter","post","toLowerCase","includes","body","reverse","Provider","value","Nav","useContext","onSubmit","e","preventDefault","htmlFor","id","type","placeholder","onChange","target","to","Footer","Date","getFullYear","Layout","Post","datetime","length","slice","Feed","map","Home","About","style","marginTop","create","baseURL","PostPage","navigate","useNavigate","useParams","find","toString","handleDelete","api","delete","postsList","console","log","status","onClick","NewPost","postTitle","setPostTitle","postBody","setPostBody","handleSubmit","format","newPost","required","EditPost","editTitle","setEditTitle","editBody","setEditBody","handleEdit","updatedPost","put","Missing","App","path","element","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57f128b5.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useWindowSize = () => {\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: undefined,\r\n        height: undefined,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            });\r\n        };\r\n        handleResize();\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => window.removeEventListener('resize', handleResize);\r\n        // \"cleanUp\" runs if \"useEffect\" dependency changes.'\r\n    }, []);\r\n\r\n    return windowSize;\r\n};\r\nexport default useWindowSize;\r\n","import React from 'react';\r\nimport { FaLaptop, FaTabletAlt, FaMobileAlt } from 'react-icons/fa';\r\nimport useWindowSize from './hooks/useWindowSize';\r\n\r\nconst Header = ({ title }) => {\r\n    const { width } = useWindowSize();\r\n\r\n    return (\r\n        <header className='Header'>\r\n            <h1>{title}</h1>\r\n            {width < 768 ? (\r\n                <FaMobileAlt />\r\n            ) : width < 992 ? (\r\n                <FaTabletAlt />\r\n            ) : (\r\n                <FaLaptop />\r\n            )}\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useAxiosFetch = (dataUrl) => {\r\n    const [data, setData] = useState([]);\r\n    const [fetchError, setFetchError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const source = axios.CancelToken.source();\r\n\r\n        const fetchData = async (url) => {\r\n            try {\r\n                const response = await axios.get(url, {\r\n                    cancelToken: source.token,\r\n                });\r\n                if (isMounted) {\r\n                    setData(response.data);\r\n                    setFetchError(null);\r\n                }\r\n            } catch (err) {\r\n                if (isMounted) {\r\n                    setFetchError(err.message);\r\n                    setData([]);\r\n                }\r\n            } finally {\r\n                isMounted && setTimeout(() => setIsLoading(false), 2000);\r\n            }\r\n        };\r\n        fetchData(dataUrl);\r\n\r\n        const cleanUp = () => {\r\n            isMounted = false;\r\n            source.cancel();\r\n        };\r\n\r\n        return cleanUp;\r\n    }, [dataUrl]);\r\n\r\n    return { data, fetchError, isLoading };\r\n};\r\n\r\nexport default useAxiosFetch;\r\n","import { useState, useEffect, createContext } from 'react';\r\nimport useAxiosFetch from '../hooks/useAxiosFetch';\r\n\r\nconst DataContext = createContext({});\r\n\r\nexport const DataProvider = ({ children }) => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    const { data, fetchError, isLoading } = useAxiosFetch(\r\n        'http://localhost:3100/posts'\r\n    );\r\n\r\n    useEffect(() => {\r\n        setPosts(data);\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        const filterResults = posts.filter(\r\n            (post) =>\r\n                post.title.toLowerCase().includes(search.toLowerCase()) ||\r\n                post.body.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setSearchResults(filterResults.reverse());\r\n    }, [posts, search]);\r\n\r\n    return (\r\n        <DataContext.Provider\r\n            value={{\r\n                posts,\r\n                setPosts,\r\n                search,\r\n                setSearch,\r\n                searchResults,\r\n                setSearchResults,\r\n                isLoading,\r\n                fetchError,\r\n            }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    );\r\n};\r\n\r\nexport default DataContext;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport DataContext from './context/DataContext';\r\n\r\nconst Nav = () => {\r\n    const { search, setSearch } = useContext(DataContext);\r\n\r\n    return (\r\n        <nav className='Nav'>\r\n            <form className='searchForm' onSubmit={(e) => e.preventDefault()}>\r\n                <label htmlFor='search'>Search Posts</label>\r\n                <input\r\n                    id='search'\r\n                    type='text'\r\n                    placeholder='Search Posts'\r\n                    value={search}\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n            </form>\r\n            <ul>\r\n                <li>\r\n                    <Link to='/'>Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/post'>Post</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/about'>About</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className='Footer'>\r\n            <p>Reece Wisdom ~-~ Copyright &copy; {new Date().getFullYear()}</p>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Nav from './Nav';\r\nimport Footer from './Footer';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nconst Layout = ({ title }) => {\r\n    return (\r\n        <div className='App'>\r\n            <Header title={title} />\r\n            <Nav />\r\n            <Outlet />\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Post = ({ post }) => {\r\n    return (\r\n        <article className='post'>\r\n            <Link to={`/post/${post.id}`}>\r\n                <h2>{post.title}</h2>\r\n                <p className='postDate'>{post.datetime}</p>\r\n                <p className='postBody'>\r\n                    {post.body.length <= 25\r\n                        ? post.body\r\n                        : `${post.body.slice(0, 25)}...`}\r\n                </p>\r\n            </Link>\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport Post from './Post';\r\n\r\nconst Feed = ({ posts }) => {\r\n    return (\r\n        <>\r\n            {posts.map((post) => (\r\n                <Post key={post.id} post={post} />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Feed;\r\n","import React from 'react';\r\nimport Feed from './Feed';\r\nimport { FiLoader, FiFrown } from 'react-icons/fi';\r\nimport { useContext } from 'react';\r\nimport DataContext from './context/DataContext';\r\n\r\nconst Home = () => {\r\n    const { searchResults, isLoading, fetchError } = useContext(DataContext);\r\n    const loadingMsg = 'Loading...';\r\n\r\n    return (\r\n        <main className='Home'>\r\n            {isLoading && (\r\n                <>\r\n                    <FiLoader className='image loader' />\r\n                    <p className='msg load'>{loadingMsg}</p>\r\n                </>\r\n            )}\r\n            {!isLoading && fetchError && (\r\n                <>\r\n                    <FiFrown className='image err' />\r\n                    <p className='msg err'>{fetchError}</p>\r\n                </>\r\n            )}\r\n            {!isLoading &&\r\n                !fetchError &&\r\n                (searchResults.length ? (\r\n                    <Feed posts={searchResults} />\r\n                ) : (\r\n                    <p>No Posts!</p>\r\n                ))}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <main className='About'>\r\n            <h2>About</h2>\r\n            <p style={{ marginTop: '1rem' }}>\r\n                This personal blog app is a project I created to Learn React\r\n                using the React Router Library & Axios API Requests. React\r\n                Router is a standard library for routing in React. It enables\r\n                navigation across different views of various components in a\r\n                React Application, and changes the browser URL accordingly\r\n                (maintaining synchronisation between the UI and URL).\r\n                <br />\r\n                <br />\r\n                JSX (JavaScript XML) syntax is neither a string nor HTML, it’s a\r\n                syntax extension to JavaScript. JSX is used in React to write\r\n                HTML in JavaScript in the DOM to design the UI. Since JSX is\r\n                closer to JavaScript than to HTML, React DOM uses camelCase\r\n                property naming convention instead of HTML attribute names, e.g.\r\n                class becomes className in JSX, and tabindex becomes tabIndex.\r\n                <br />\r\n                <br />\r\n                React separates concerns with loosely coupled units called\r\n                “components” that contain both markup (HTML) & logic\r\n                (JavaScript). Babel compiles JSX down and produces React\r\n                “elements” with React.createElement() calls. After compilation,\r\n                JSX expressions become regular JavaScript function calls and\r\n                evaluate to JavaScript objects.\r\n                <br />\r\n                <br />\r\n                By default, React DOM escapes any values embedded in JSX before\r\n                rendering them. Thus ensuring that you can never inject anything\r\n                that’s not explicitly written in your application. Everything is\r\n                converted to a string before being rendered. This helps prevent\r\n                XSS (cross-site-scripting) attacks.\r\n            </p>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:3100',\r\n});\r\n","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { useNavigate, useParams, Link } from 'react-router-dom';\r\nimport DataContext from './context/DataContext';\r\nimport api from './api/posts';\r\n\r\nconst PostPage = () => {\r\n    const { posts, setPosts } = useContext(DataContext);\r\n    const navigate = useNavigate();\r\n\r\n    const { id } = useParams();\r\n    const post = posts.find((post) => post.id.toString() === id);\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await api.delete(`/posts/${id}`);\r\n            const postsList = posts.filter((post) => post.id !== id);\r\n            setPosts(postsList);\r\n            navigate('/');\r\n        } catch (err) {\r\n            console.log(`Error: ${err.response.status}:`);\r\n            console.log(err.response.data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main className='PostPage'>\r\n            <article className='post'>\r\n                {post && (\r\n                    <>\r\n                        <h2>{post.title}</h2>\r\n                        <p className='postDate'>{post.datetime}</p>\r\n                        <p className='postBody'>{post.body}</p>\r\n                        <Link to={`/post/${post.id}/edit`}>\r\n                            <button className='editButton'>Edit Post</button>\r\n                        </Link>\r\n                        <button\r\n                            className='deleteButton'\r\n                            onClick={() => handleDelete(post.id)}>\r\n                            Delete Post\r\n                        </button>\r\n                    </>\r\n                )}\r\n                {!post && (\r\n                    <>\r\n                        <h2>Post Not Found!</h2>\r\n                        <Link to='/'>Return to Homepage</Link>\r\n                    </>\r\n                )}\r\n            </article>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default PostPage;\r\n","import React from 'react';\r\nimport { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DataContext from './context/DataContext';\r\nimport { format } from 'date-fns';\r\nimport api from './api/posts';\r\n\r\nconst NewPost = () => {\r\n    const [postTitle, setPostTitle] = useState('');\r\n    const [postBody, setPostBody] = useState('');\r\n    const { posts, setPosts } = useContext(DataContext);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\r\n        const datetime = format(new Date(), 'MMMM dd, yyyy pp');\r\n        const newPost = {\r\n            id,\r\n            title: postTitle,\r\n            datetime,\r\n            body: postBody,\r\n        };\r\n        try {\r\n            const response = await api.post('/posts', newPost);\r\n            const postsList = [...posts, response.data];\r\n            setPosts(postsList);\r\n            setPostTitle('');\r\n            setPostBody('');\r\n            navigate('/');\r\n        } catch (err) {\r\n            console.log(`Error: ${err.response.status}:`);\r\n            console.log(err.response.data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main className='NewPost'>\r\n            <h2>New Post</h2>\r\n            <form className='newPostForm' onSubmit={handleSubmit}>\r\n                <label htmlFor='postTitle'>Title:</label>\r\n                <input\r\n                    id='postTitle'\r\n                    type='text'\r\n                    required\r\n                    value={postTitle}\r\n                    onChange={(e) => setPostTitle(e.target.value)}\r\n                />\r\n                <label htmlFor='postBody'>Body:</label>\r\n                <textarea\r\n                    id='postBody'\r\n                    required\r\n                    value={postBody}\r\n                    onChange={(e) => setPostBody(e.target.value)}\r\n                />\r\n                <button type='submit'>Submit</button>\r\n            </form>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default NewPost;\r\n","import React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate, useParams, Link } from 'react-router-dom';\r\nimport DataContext from './context/DataContext';\r\nimport { format } from 'date-fns';\r\nimport api from './api/posts';\r\n\r\nconst EditPost = () => {\r\n    const [editTitle, setEditTitle] = useState('');\r\n    const [editBody, setEditBody] = useState('');\r\n    const { posts, setPosts } = useContext(DataContext);\r\n    const navigate = useNavigate();\r\n\r\n    const { id } = useParams();\r\n    const post = posts.find((post) => post.id.toString() === id);\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n            setEditTitle(post.title);\r\n            setEditBody(post.body);\r\n        }\r\n    }, [post, setEditTitle, setEditBody]);\r\n\r\n    const handleEdit = async (id) => {\r\n        const datetime = format(new Date(), 'MMMM dd, yyyy pp');\r\n        const updatedPost = { id, title: editTitle, datetime, body: editBody };\r\n        try {\r\n            const response = await api.put(`/posts/${id}`, updatedPost);\r\n            setPosts(\r\n                posts.map((post) =>\r\n                    post.id === id ? { ...response.data } : post\r\n                )\r\n            );\r\n            setEditTitle('');\r\n            setEditBody('');\r\n            navigate('/');\r\n        } catch (err) {\r\n            console.log(`Error: ${err.response.status}:`);\r\n            console.log(err.response.data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main className='NewPost'>\r\n            {editTitle && (\r\n                <>\r\n                    <h2>Edit Post</h2>\r\n                    <form\r\n                        className='newPostForm'\r\n                        onSubmit={(e) => e.preventDefault()}>\r\n                        <label htmlFor='postTitle'>Title:</label>\r\n                        <input\r\n                            id='postTitle'\r\n                            type='text'\r\n                            required\r\n                            value={editTitle}\r\n                            onChange={(e) => setEditTitle(e.target.value)}\r\n                        />\r\n                        <label htmlFor='postBody'>Body:</label>\r\n                        <textarea\r\n                            id='postBody'\r\n                            required\r\n                            value={editBody}\r\n                            onChange={(e) => setEditBody(e.target.value)}\r\n                        />\r\n                        <button\r\n                            type='submit'\r\n                            onClick={() => handleEdit(post.id)}>\r\n                            Submit\r\n                        </button>\r\n                    </form>\r\n                </>\r\n            )}\r\n            {!editTitle && (\r\n                <>\r\n                    <h2>Post Not Found!</h2>\r\n                    <Link to='/'>Return to Homepage</Link>\r\n                </>\r\n            )}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default EditPost;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Missing = () => {\r\n    return (\r\n        <main className='Missing'>\r\n            <h2>Page Not Found!</h2>\r\n            <Link to='/'>Return to Homepage</Link>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Missing;\r\n","import Layout from './Layout';\nimport Home from './Home';\nimport About from './About';\nimport PostPage from './PostPage';\nimport NewPost from './NewPost';\nimport EditPost from './EditPost';\nimport Missing from './Missing';\nimport { Routes, Route } from 'react-router-dom';\nimport { DataProvider } from './context/DataContext';\n\nfunction App() {\n    const title = 'React JS Blog';\n\n    return (\n        <DataProvider>\n            <Routes>\n                <Route path='/' element={<Layout title={title} />}>\n                    <Route index element={<Home />} />\n                    <Route path='post'>\n                        <Route index element={<NewPost />} />\n                        <Route path=':id' element={<PostPage />} />\n                        <Route path=':id/edit' element={<EditPost />} />\n                    </Route>\n                    <Route path='about' element={<About />} />\n                    <Route path='*' element={<Missing />} />\n                </Route>\n            </Routes>\n        </DataProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <Routes>\n                <Route path='/*' element={<App />} />\n            </Routes>\n        </Router>\n        {/* <BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter> */}\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}